apply plugin: 'maven'

version = VERSION_NAME
group = GROUP // Maven Group ID for the artifact


install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {

            groupId = GROUP
            artifactId = POM_ARTIFACT_ID
            version = VERSION_NAME

            project {
                packaging POM_PACKAGING


                // Add your description here
                name POM_NAME
                description POM_DESCRIPTION
                url POM_URL

                // Set your license
                licenses {
                    license {
                        name POM_LICENCE_NAME
                        url POM_LICENCE_URL
                    }
                }
                developers {
                    developer {
                        id POM_DEVELOPER_ID
                        name POM_DEVELOPER_NAME
                        email POM_DEVELOPER_EMAIL
                    }
                }
                scm {
                    connection POM_SCM_CONNECTION
                    developerConnection POM_SCM_DEV_CONNECTION
                    url POM_SCM_URL

                }
            }
        }
    }
}

apply plugin: 'com.jfrog.bintray'

if (project.getPlugins().hasPlugin('com.android.application') || project.getPlugins().hasPlugin('com.android.library')) {
    // Android libraries

    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        // failOnError = false
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.source
    }

} else {
    // Java libraries
    task sourcesJar(type: Jar, dependsOn:classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn:javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
}


artifacts {
    if (project.getPlugins().hasPlugin('com.android.application') || project.getPlugins().hasPlugin('com.android.library')) {
        archives androidSourcesJar
        archives androidJavadocsJar
    } else {
        archives sourcesJar
        archives javadocJar
    }
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']

    // Bintry package information
    pkg {
        repo = BINTRAY_REPO
        name = POM_ARTIFACT_ID
        desc = POM_DESCRIPTION
        websiteUrl = POM_URL
        vcsUrl = POM_SCM_URL
        licenses = [BINTRAY_LICENCE]
        publish = true
        publicDownloadNumbers = true
        version {
            name = VERSION_NAME
            released = new Date();
        }
    }
}